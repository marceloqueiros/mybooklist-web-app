#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyBookList.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyBookList")]
	public partial class DataClassesMBLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdiciona(Adiciona instance);
    partial void UpdateAdiciona(Adiciona instance);
    partial void DeleteAdiciona(Adiciona instance);
    partial void InsertUtilizador(Utilizador instance);
    partial void UpdateUtilizador(Utilizador instance);
    partial void DeleteUtilizador(Utilizador instance);
    partial void InsertAdministrador(Administrador instance);
    partial void UpdateAdministrador(Administrador instance);
    partial void DeleteAdministrador(Administrador instance);
    partial void InsertAutor(Autor instance);
    partial void UpdateAutor(Autor instance);
    partial void DeleteAutor(Autor instance);
    partial void InsertBloqueia(Bloqueia instance);
    partial void UpdateBloqueia(Bloqueia instance);
    partial void DeleteBloqueia(Bloqueia instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertDisponivel(Disponivel instance);
    partial void UpdateDisponivel(Disponivel instance);
    partial void DeleteDisponivel(Disponivel instance);
    partial void InsertEmpresta(Empresta instance);
    partial void UpdateEmpresta(Empresta instance);
    partial void DeleteEmpresta(Empresta instance);
    partial void InsertEscreve(Escreve instance);
    partial void UpdateEscreve(Escreve instance);
    partial void DeleteEscreve(Escreve instance);
    partial void InsertLeu(Leu instance);
    partial void UpdateLeu(Leu instance);
    partial void DeleteLeu(Leu instance);
    partial void InsertLivro(Livro instance);
    partial void UpdateLivro(Livro instance);
    partial void DeleteLivro(Livro instance);
    partial void InsertLoja(Loja instance);
    partial void UpdateLoja(Loja instance);
    partial void DeleteLoja(Loja instance);
    partial void InsertPede(Pede instance);
    partial void UpdatePede(Pede instance);
    partial void DeletePede(Pede instance);
    partial void InsertPertence(Pertence instance);
    partial void UpdatePertence(Pertence instance);
    partial void DeletePertence(Pertence instance);
    partial void InsertPossui(Possui instance);
    partial void UpdatePossui(Possui instance);
    partial void DeletePossui(Possui instance);
    #endregion
		
		public DataClassesMBLDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MyBookListConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMBLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMBLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMBLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMBLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Adiciona> Adicionas
		{
			get
			{
				return this.GetTable<Adiciona>();
			}
		}
		
		public System.Data.Linq.Table<Utilizador> Utilizadors
		{
			get
			{
				return this.GetTable<Utilizador>();
			}
		}
		
		public System.Data.Linq.Table<Administrador> Administradors
		{
			get
			{
				return this.GetTable<Administrador>();
			}
		}
		
		public System.Data.Linq.Table<Autor> Autors
		{
			get
			{
				return this.GetTable<Autor>();
			}
		}
		
		public System.Data.Linq.Table<Bloqueia> Bloqueias
		{
			get
			{
				return this.GetTable<Bloqueia>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categorias
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Disponivel> Disponivels
		{
			get
			{
				return this.GetTable<Disponivel>();
			}
		}
		
		public System.Data.Linq.Table<Empresta> Emprestas
		{
			get
			{
				return this.GetTable<Empresta>();
			}
		}
		
		public System.Data.Linq.Table<Escreve> Escreves
		{
			get
			{
				return this.GetTable<Escreve>();
			}
		}
		
		public System.Data.Linq.Table<Leu> Leus
		{
			get
			{
				return this.GetTable<Leu>();
			}
		}
		
		public System.Data.Linq.Table<Livro> Livros
		{
			get
			{
				return this.GetTable<Livro>();
			}
		}
		
		public System.Data.Linq.Table<Loja> Lojas
		{
			get
			{
				return this.GetTable<Loja>();
			}
		}
		
		public System.Data.Linq.Table<Pede> Pedes
		{
			get
			{
				return this.GetTable<Pede>();
			}
		}
		
		public System.Data.Linq.Table<Pertence> Pertences
		{
			get
			{
				return this.GetTable<Pertence>();
			}
		}
		
		public System.Data.Linq.Table<Possui> Possuis
		{
			get
			{
				return this.GetTable<Possui>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adiciona")]
	public partial class Adiciona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Livro;
		
		private int _ID_Administrador;
		
		private System.DateTime _Data_Adicao;
		
		private EntityRef<Administrador> _Administrador;
		
		private EntityRef<Livro> _Livro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LivroChanging(int value);
    partial void OnID_LivroChanged();
    partial void OnID_AdministradorChanging(int value);
    partial void OnID_AdministradorChanged();
    partial void OnData_AdicaoChanging(System.DateTime value);
    partial void OnData_AdicaoChanged();
    #endregion
		
		public Adiciona()
		{
			this._Administrador = default(EntityRef<Administrador>);
			this._Livro = default(EntityRef<Livro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Livro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Livro
		{
			get
			{
				return this._ID_Livro;
			}
			set
			{
				if ((this._ID_Livro != value))
				{
					if (this._Livro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LivroChanging(value);
					this.SendPropertyChanging();
					this._ID_Livro = value;
					this.SendPropertyChanged("ID_Livro");
					this.OnID_LivroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Administrador", DbType="Int NOT NULL")]
		public int ID_Administrador
		{
			get
			{
				return this._ID_Administrador;
			}
			set
			{
				if ((this._ID_Administrador != value))
				{
					if (this._Administrador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AdministradorChanging(value);
					this.SendPropertyChanging();
					this._ID_Administrador = value;
					this.SendPropertyChanged("ID_Administrador");
					this.OnID_AdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Adicao", DbType="DateTime NOT NULL")]
		public System.DateTime Data_Adicao
		{
			get
			{
				return this._Data_Adicao;
			}
			set
			{
				if ((this._Data_Adicao != value))
				{
					this.OnData_AdicaoChanging(value);
					this.SendPropertyChanging();
					this._Data_Adicao = value;
					this.SendPropertyChanged("Data_Adicao");
					this.OnData_AdicaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrador_Adiciona", Storage="_Administrador", ThisKey="ID_Administrador", OtherKey="ID_Administrador", IsForeignKey=true)]
		public Administrador Administrador
		{
			get
			{
				return this._Administrador.Entity;
			}
			set
			{
				Administrador previousValue = this._Administrador.Entity;
				if (((previousValue != value) 
							|| (this._Administrador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrador.Entity = null;
						previousValue.Adicionas.Remove(this);
					}
					this._Administrador.Entity = value;
					if ((value != null))
					{
						value.Adicionas.Add(this);
						this._ID_Administrador = value.ID_Administrador;
					}
					else
					{
						this._ID_Administrador = default(int);
					}
					this.SendPropertyChanged("Administrador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Adiciona", Storage="_Livro", ThisKey="ID_Livro", OtherKey="ID_Livro", IsForeignKey=true)]
		public Livro Livro
		{
			get
			{
				return this._Livro.Entity;
			}
			set
			{
				Livro previousValue = this._Livro.Entity;
				if (((previousValue != value) 
							|| (this._Livro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livro.Entity = null;
						previousValue.Adiciona = null;
					}
					this._Livro.Entity = value;
					if ((value != null))
					{
						value.Adiciona = this;
						this._ID_Livro = value.ID_Livro;
					}
					else
					{
						this._ID_Livro = default(int);
					}
					this.SendPropertyChanged("Livro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizador")]
	public partial class Utilizador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Utilizador;
		
		private string _Username;
		
		private string _Pass;
		
		private string _Nome;
		
		private int _Estado;
		
		private System.DateTime _Data_Nascimento;
		
		private string _ContactoTelefone;
		
		private string _ContactoEmail;
		
		private string _MoradaLocalidade;
		
		private string _MoradaCodigo_Postal;
		
		private string _MoradaRua;
		
		private string _MoradaPorta;
		
		private System.Nullable<double> _Feedback;
		
		private string _Token;
		
		private System.Nullable<bool> _Bloqueado;
		
		private EntitySet<Bloqueia> _Bloqueias;
		
		private EntitySet<Empresta> _Emprestas;
		
		private EntitySet<Empresta> _Emprestas1;
		
		private EntitySet<Leu> _Leus;
		
		private EntitySet<Pede> _Pedes;
		
		private EntitySet<Possui> _Possuis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_UtilizadorChanging(int value);
    partial void OnID_UtilizadorChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnData_NascimentoChanging(System.DateTime value);
    partial void OnData_NascimentoChanged();
    partial void OnContactoTelefoneChanging(string value);
    partial void OnContactoTelefoneChanged();
    partial void OnContactoEmailChanging(string value);
    partial void OnContactoEmailChanged();
    partial void OnMoradaLocalidadeChanging(string value);
    partial void OnMoradaLocalidadeChanged();
    partial void OnMoradaCodigo_PostalChanging(string value);
    partial void OnMoradaCodigo_PostalChanged();
    partial void OnMoradaRuaChanging(string value);
    partial void OnMoradaRuaChanged();
    partial void OnMoradaPortaChanging(string value);
    partial void OnMoradaPortaChanged();
    partial void OnFeedbackChanging(System.Nullable<double> value);
    partial void OnFeedbackChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnBloqueadoChanging(System.Nullable<bool> value);
    partial void OnBloqueadoChanged();
    #endregion
		
		public Utilizador()
		{
			this._Bloqueias = new EntitySet<Bloqueia>(new Action<Bloqueia>(this.attach_Bloqueias), new Action<Bloqueia>(this.detach_Bloqueias));
			this._Emprestas = new EntitySet<Empresta>(new Action<Empresta>(this.attach_Emprestas), new Action<Empresta>(this.detach_Emprestas));
			this._Emprestas1 = new EntitySet<Empresta>(new Action<Empresta>(this.attach_Emprestas1), new Action<Empresta>(this.detach_Emprestas1));
			this._Leus = new EntitySet<Leu>(new Action<Leu>(this.attach_Leus), new Action<Leu>(this.detach_Leus));
			this._Pedes = new EntitySet<Pede>(new Action<Pede>(this.attach_Pedes), new Action<Pede>(this.detach_Pedes));
			this._Possuis = new EntitySet<Possui>(new Action<Possui>(this.attach_Possuis), new Action<Possui>(this.detach_Possuis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Utilizador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Utilizador
		{
			get
			{
				return this._ID_Utilizador;
			}
			set
			{
				if ((this._ID_Utilizador != value))
				{
					this.OnID_UtilizadorChanging(value);
					this.SendPropertyChanging();
					this._ID_Utilizador = value;
					this.SendPropertyChanged("ID_Utilizador");
					this.OnID_UtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Nascimento", DbType="Date NOT NULL")]
		public System.DateTime Data_Nascimento
		{
			get
			{
				return this._Data_Nascimento;
			}
			set
			{
				if ((this._Data_Nascimento != value))
				{
					this.OnData_NascimentoChanging(value);
					this.SendPropertyChanging();
					this._Data_Nascimento = value;
					this.SendPropertyChanged("Data_Nascimento");
					this.OnData_NascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactoTelefone", DbType="VarChar(9)")]
		public string ContactoTelefone
		{
			get
			{
				return this._ContactoTelefone;
			}
			set
			{
				if ((this._ContactoTelefone != value))
				{
					this.OnContactoTelefoneChanging(value);
					this.SendPropertyChanging();
					this._ContactoTelefone = value;
					this.SendPropertyChanged("ContactoTelefone");
					this.OnContactoTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactoEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactoEmail
		{
			get
			{
				return this._ContactoEmail;
			}
			set
			{
				if ((this._ContactoEmail != value))
				{
					this.OnContactoEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactoEmail = value;
					this.SendPropertyChanged("ContactoEmail");
					this.OnContactoEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoradaLocalidade", DbType="VarChar(50)")]
		public string MoradaLocalidade
		{
			get
			{
				return this._MoradaLocalidade;
			}
			set
			{
				if ((this._MoradaLocalidade != value))
				{
					this.OnMoradaLocalidadeChanging(value);
					this.SendPropertyChanging();
					this._MoradaLocalidade = value;
					this.SendPropertyChanged("MoradaLocalidade");
					this.OnMoradaLocalidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoradaCodigo_Postal", DbType="VarChar(8)")]
		public string MoradaCodigo_Postal
		{
			get
			{
				return this._MoradaCodigo_Postal;
			}
			set
			{
				if ((this._MoradaCodigo_Postal != value))
				{
					this.OnMoradaCodigo_PostalChanging(value);
					this.SendPropertyChanging();
					this._MoradaCodigo_Postal = value;
					this.SendPropertyChanged("MoradaCodigo_Postal");
					this.OnMoradaCodigo_PostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoradaRua", DbType="VarChar(80)")]
		public string MoradaRua
		{
			get
			{
				return this._MoradaRua;
			}
			set
			{
				if ((this._MoradaRua != value))
				{
					this.OnMoradaRuaChanging(value);
					this.SendPropertyChanging();
					this._MoradaRua = value;
					this.SendPropertyChanged("MoradaRua");
					this.OnMoradaRuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoradaPorta", DbType="VarChar(20)")]
		public string MoradaPorta
		{
			get
			{
				return this._MoradaPorta;
			}
			set
			{
				if ((this._MoradaPorta != value))
				{
					this.OnMoradaPortaChanging(value);
					this.SendPropertyChanging();
					this._MoradaPorta = value;
					this.SendPropertyChanged("MoradaPorta");
					this.OnMoradaPortaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="Float")]
		public System.Nullable<double> Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this.OnFeedbackChanging(value);
					this.SendPropertyChanging();
					this._Feedback = value;
					this.SendPropertyChanged("Feedback");
					this.OnFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="VarChar(10)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bloqueado", DbType="Bit")]
		public System.Nullable<bool> Bloqueado
		{
			get
			{
				return this._Bloqueado;
			}
			set
			{
				if ((this._Bloqueado != value))
				{
					this.OnBloqueadoChanging(value);
					this.SendPropertyChanging();
					this._Bloqueado = value;
					this.SendPropertyChanged("Bloqueado");
					this.OnBloqueadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Bloqueia", Storage="_Bloqueias", ThisKey="ID_Utilizador", OtherKey="ID_Utilizador")]
		public EntitySet<Bloqueia> Bloqueias
		{
			get
			{
				return this._Bloqueias;
			}
			set
			{
				this._Bloqueias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Empresta", Storage="_Emprestas", ThisKey="ID_Utilizador", OtherKey="ID_UserEmpresta")]
		public EntitySet<Empresta> Emprestas
		{
			get
			{
				return this._Emprestas;
			}
			set
			{
				this._Emprestas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Empresta1", Storage="_Emprestas1", ThisKey="ID_Utilizador", OtherKey="ID_UserRecebe")]
		public EntitySet<Empresta> Emprestas1
		{
			get
			{
				return this._Emprestas1;
			}
			set
			{
				this._Emprestas1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Leu", Storage="_Leus", ThisKey="ID_Utilizador", OtherKey="ID_Utilizador")]
		public EntitySet<Leu> Leus
		{
			get
			{
				return this._Leus;
			}
			set
			{
				this._Leus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Pede", Storage="_Pedes", ThisKey="ID_Utilizador", OtherKey="ID_Utilizador")]
		public EntitySet<Pede> Pedes
		{
			get
			{
				return this._Pedes;
			}
			set
			{
				this._Pedes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Possui", Storage="_Possuis", ThisKey="ID_Utilizador", OtherKey="ID_Utilizador")]
		public EntitySet<Possui> Possuis
		{
			get
			{
				return this._Possuis;
			}
			set
			{
				this._Possuis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bloqueias(Bloqueia entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Bloqueias(Bloqueia entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Emprestas(Empresta entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Emprestas(Empresta entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Emprestas1(Empresta entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador1 = this;
		}
		
		private void detach_Emprestas1(Empresta entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador1 = null;
		}
		
		private void attach_Leus(Leu entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Leus(Leu entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Pedes(Pede entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Pedes(Pede entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Possuis(Possui entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Possuis(Possui entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrador")]
	public partial class Administrador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Administrador;
		
		private string _Username;
		
		private string _Pass;
		
		private string _Email;
		
		private EntitySet<Adiciona> _Adicionas;
		
		private EntitySet<Bloqueia> _Bloqueias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AdministradorChanging(int value);
    partial void OnID_AdministradorChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Administrador()
		{
			this._Adicionas = new EntitySet<Adiciona>(new Action<Adiciona>(this.attach_Adicionas), new Action<Adiciona>(this.detach_Adicionas));
			this._Bloqueias = new EntitySet<Bloqueia>(new Action<Bloqueia>(this.attach_Bloqueias), new Action<Bloqueia>(this.detach_Bloqueias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Administrador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Administrador
		{
			get
			{
				return this._ID_Administrador;
			}
			set
			{
				if ((this._ID_Administrador != value))
				{
					this.OnID_AdministradorChanging(value);
					this.SendPropertyChanging();
					this._ID_Administrador = value;
					this.SendPropertyChanged("ID_Administrador");
					this.OnID_AdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrador_Adiciona", Storage="_Adicionas", ThisKey="ID_Administrador", OtherKey="ID_Administrador")]
		public EntitySet<Adiciona> Adicionas
		{
			get
			{
				return this._Adicionas;
			}
			set
			{
				this._Adicionas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrador_Bloqueia", Storage="_Bloqueias", ThisKey="ID_Administrador", OtherKey="ID_Administrador")]
		public EntitySet<Bloqueia> Bloqueias
		{
			get
			{
				return this._Bloqueias;
			}
			set
			{
				this._Bloqueias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Adicionas(Adiciona entity)
		{
			this.SendPropertyChanging();
			entity.Administrador = this;
		}
		
		private void detach_Adicionas(Adiciona entity)
		{
			this.SendPropertyChanging();
			entity.Administrador = null;
		}
		
		private void attach_Bloqueias(Bloqueia entity)
		{
			this.SendPropertyChanging();
			entity.Administrador = this;
		}
		
		private void detach_Bloqueias(Bloqueia entity)
		{
			this.SendPropertyChanging();
			entity.Administrador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autor")]
	public partial class Autor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Autor;
		
		private string _Nome;
		
		private string _Pseudonimo;
		
		private string _Biografia;
		
		private EntitySet<Escreve> _Escreves;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AutorChanging(int value);
    partial void OnID_AutorChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnPseudonimoChanging(string value);
    partial void OnPseudonimoChanged();
    partial void OnBiografiaChanging(string value);
    partial void OnBiografiaChanged();
    #endregion
		
		public Autor()
		{
			this._Escreves = new EntitySet<Escreve>(new Action<Escreve>(this.attach_Escreves), new Action<Escreve>(this.detach_Escreves));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Autor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Autor
		{
			get
			{
				return this._ID_Autor;
			}
			set
			{
				if ((this._ID_Autor != value))
				{
					this.OnID_AutorChanging(value);
					this.SendPropertyChanging();
					this._ID_Autor = value;
					this.SendPropertyChanged("ID_Autor");
					this.OnID_AutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pseudonimo", DbType="VarChar(60)")]
		public string Pseudonimo
		{
			get
			{
				return this._Pseudonimo;
			}
			set
			{
				if ((this._Pseudonimo != value))
				{
					this.OnPseudonimoChanging(value);
					this.SendPropertyChanging();
					this._Pseudonimo = value;
					this.SendPropertyChanged("Pseudonimo");
					this.OnPseudonimoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Biografia", DbType="VarChar(1000)")]
		public string Biografia
		{
			get
			{
				return this._Biografia;
			}
			set
			{
				if ((this._Biografia != value))
				{
					this.OnBiografiaChanging(value);
					this.SendPropertyChanging();
					this._Biografia = value;
					this.SendPropertyChanged("Biografia");
					this.OnBiografiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_Escreve", Storage="_Escreves", ThisKey="ID_Autor", OtherKey="ID_Autor")]
		public EntitySet<Escreve> Escreves
		{
			get
			{
				return this._Escreves;
			}
			set
			{
				this._Escreves.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Escreves(Escreve entity)
		{
			this.SendPropertyChanging();
			entity.Autor = this;
		}
		
		private void detach_Escreves(Escreve entity)
		{
			this.SendPropertyChanging();
			entity.Autor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bloqueia")]
	public partial class Bloqueia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Administrador;
		
		private int _ID_Utilizador;
		
		private System.DateTime _Data_Bloqueio;
		
		private System.Nullable<System.DateTime> _Data_Desbloqueio;
		
		private string _Motivo;
		
		private EntityRef<Administrador> _Administrador;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AdministradorChanging(int value);
    partial void OnID_AdministradorChanged();
    partial void OnID_UtilizadorChanging(int value);
    partial void OnID_UtilizadorChanged();
    partial void OnData_BloqueioChanging(System.DateTime value);
    partial void OnData_BloqueioChanged();
    partial void OnData_DesbloqueioChanging(System.Nullable<System.DateTime> value);
    partial void OnData_DesbloqueioChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    #endregion
		
		public Bloqueia()
		{
			this._Administrador = default(EntityRef<Administrador>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Administrador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Administrador
		{
			get
			{
				return this._ID_Administrador;
			}
			set
			{
				if ((this._ID_Administrador != value))
				{
					if (this._Administrador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AdministradorChanging(value);
					this.SendPropertyChanging();
					this._ID_Administrador = value;
					this.SendPropertyChanged("ID_Administrador");
					this.OnID_AdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Utilizador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Utilizador
		{
			get
			{
				return this._ID_Utilizador;
			}
			set
			{
				if ((this._ID_Utilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UtilizadorChanging(value);
					this.SendPropertyChanging();
					this._ID_Utilizador = value;
					this.SendPropertyChanged("ID_Utilizador");
					this.OnID_UtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Bloqueio", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Bloqueio
		{
			get
			{
				return this._Data_Bloqueio;
			}
			set
			{
				if ((this._Data_Bloqueio != value))
				{
					this.OnData_BloqueioChanging(value);
					this.SendPropertyChanging();
					this._Data_Bloqueio = value;
					this.SendPropertyChanged("Data_Bloqueio");
					this.OnData_BloqueioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Desbloqueio", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_Desbloqueio
		{
			get
			{
				return this._Data_Desbloqueio;
			}
			set
			{
				if ((this._Data_Desbloqueio != value))
				{
					this.OnData_DesbloqueioChanging(value);
					this.SendPropertyChanging();
					this._Data_Desbloqueio = value;
					this.SendPropertyChanged("Data_Desbloqueio");
					this.OnData_DesbloqueioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrador_Bloqueia", Storage="_Administrador", ThisKey="ID_Administrador", OtherKey="ID_Administrador", IsForeignKey=true)]
		public Administrador Administrador
		{
			get
			{
				return this._Administrador.Entity;
			}
			set
			{
				Administrador previousValue = this._Administrador.Entity;
				if (((previousValue != value) 
							|| (this._Administrador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrador.Entity = null;
						previousValue.Bloqueias.Remove(this);
					}
					this._Administrador.Entity = value;
					if ((value != null))
					{
						value.Bloqueias.Add(this);
						this._ID_Administrador = value.ID_Administrador;
					}
					else
					{
						this._ID_Administrador = default(int);
					}
					this.SendPropertyChanged("Administrador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Bloqueia", Storage="_Utilizador", ThisKey="ID_Utilizador", OtherKey="ID_Utilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Bloqueias.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Bloqueias.Add(this);
						this._ID_Utilizador = value.ID_Utilizador;
					}
					else
					{
						this._ID_Utilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Categoria;
		
		private string _Nome;
		
		private EntitySet<Pertence> _Pertences;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CategoriaChanging(int value);
    partial void OnID_CategoriaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public Categoria()
		{
			this._Pertences = new EntitySet<Pertence>(new Action<Pertence>(this.attach_Pertences), new Action<Pertence>(this.detach_Pertences));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Categoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Categoria
		{
			get
			{
				return this._ID_Categoria;
			}
			set
			{
				if ((this._ID_Categoria != value))
				{
					this.OnID_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._ID_Categoria = value;
					this.SendPropertyChanged("ID_Categoria");
					this.OnID_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Pertence", Storage="_Pertences", ThisKey="ID_Categoria", OtherKey="ID_Categoria")]
		public EntitySet<Pertence> Pertences
		{
			get
			{
				return this._Pertences;
			}
			set
			{
				this._Pertences.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pertences(Pertence entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Pertences(Pertence entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Disponivel")]
	public partial class Disponivel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Loja;
		
		private int _ID_Livro;
		
		private string _Link;
		
		private EntityRef<Livro> _Livro;
		
		private EntityRef<Loja> _Loja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LojaChanging(int value);
    partial void OnID_LojaChanged();
    partial void OnID_LivroChanging(int value);
    partial void OnID_LivroChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    #endregion
		
		public Disponivel()
		{
			this._Livro = default(EntityRef<Livro>);
			this._Loja = default(EntityRef<Loja>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Loja", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Loja
		{
			get
			{
				return this._ID_Loja;
			}
			set
			{
				if ((this._ID_Loja != value))
				{
					if (this._Loja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LojaChanging(value);
					this.SendPropertyChanging();
					this._ID_Loja = value;
					this.SendPropertyChanged("ID_Loja");
					this.OnID_LojaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Livro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Livro
		{
			get
			{
				return this._ID_Livro;
			}
			set
			{
				if ((this._ID_Livro != value))
				{
					if (this._Livro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LivroChanging(value);
					this.SendPropertyChanging();
					this._ID_Livro = value;
					this.SendPropertyChanged("ID_Livro");
					this.OnID_LivroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Disponivel", Storage="_Livro", ThisKey="ID_Livro", OtherKey="ID_Livro", IsForeignKey=true)]
		public Livro Livro
		{
			get
			{
				return this._Livro.Entity;
			}
			set
			{
				Livro previousValue = this._Livro.Entity;
				if (((previousValue != value) 
							|| (this._Livro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livro.Entity = null;
						previousValue.Disponivels.Remove(this);
					}
					this._Livro.Entity = value;
					if ((value != null))
					{
						value.Disponivels.Add(this);
						this._ID_Livro = value.ID_Livro;
					}
					else
					{
						this._ID_Livro = default(int);
					}
					this.SendPropertyChanged("Livro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loja_Disponivel", Storage="_Loja", ThisKey="ID_Loja", OtherKey="ID_Loja", IsForeignKey=true)]
		public Loja Loja
		{
			get
			{
				return this._Loja.Entity;
			}
			set
			{
				Loja previousValue = this._Loja.Entity;
				if (((previousValue != value) 
							|| (this._Loja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loja.Entity = null;
						previousValue.Disponivels.Remove(this);
					}
					this._Loja.Entity = value;
					if ((value != null))
					{
						value.Disponivels.Add(this);
						this._ID_Loja = value.ID_Loja;
					}
					else
					{
						this._ID_Loja = default(int);
					}
					this.SendPropertyChanged("Loja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empresta")]
	public partial class Empresta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Livro;
		
		private int _ID_UserEmpresta;
		
		private int _ID_UserRecebe;
		
		private System.DateTime _Data_Emprestimo;
		
		private System.Nullable<System.DateTime> _Data_Devolucao;
		
		private string _FeedBackComment_UserEmpresta;
		
		private string _FeedBackComment_UserRecebe;
		
		private System.Nullable<double> _ValueFeedBack_userEmpresta;
		
		private System.Nullable<double> _ValueFeedBack_userRecebe;
		
		private EntityRef<Utilizador> _Utilizador;
		
		private EntityRef<Utilizador> _Utilizador1;
		
		private EntityRef<Livro> _Livro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LivroChanging(int value);
    partial void OnID_LivroChanged();
    partial void OnID_UserEmprestaChanging(int value);
    partial void OnID_UserEmprestaChanged();
    partial void OnID_UserRecebeChanging(int value);
    partial void OnID_UserRecebeChanged();
    partial void OnData_EmprestimoChanging(System.DateTime value);
    partial void OnData_EmprestimoChanged();
    partial void OnData_DevolucaoChanging(System.Nullable<System.DateTime> value);
    partial void OnData_DevolucaoChanged();
    partial void OnFeedBackComment_UserEmprestaChanging(string value);
    partial void OnFeedBackComment_UserEmprestaChanged();
    partial void OnFeedBackComment_UserRecebeChanging(string value);
    partial void OnFeedBackComment_UserRecebeChanged();
    partial void OnValueFeedBack_userEmprestaChanging(System.Nullable<double> value);
    partial void OnValueFeedBack_userEmprestaChanged();
    partial void OnValueFeedBack_userRecebeChanging(System.Nullable<double> value);
    partial void OnValueFeedBack_userRecebeChanged();
    #endregion
		
		public Empresta()
		{
			this._Utilizador = default(EntityRef<Utilizador>);
			this._Utilizador1 = default(EntityRef<Utilizador>);
			this._Livro = default(EntityRef<Livro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Livro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Livro
		{
			get
			{
				return this._ID_Livro;
			}
			set
			{
				if ((this._ID_Livro != value))
				{
					if (this._Livro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LivroChanging(value);
					this.SendPropertyChanging();
					this._ID_Livro = value;
					this.SendPropertyChanged("ID_Livro");
					this.OnID_LivroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_UserEmpresta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_UserEmpresta
		{
			get
			{
				return this._ID_UserEmpresta;
			}
			set
			{
				if ((this._ID_UserEmpresta != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UserEmprestaChanging(value);
					this.SendPropertyChanging();
					this._ID_UserEmpresta = value;
					this.SendPropertyChanged("ID_UserEmpresta");
					this.OnID_UserEmprestaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_UserRecebe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_UserRecebe
		{
			get
			{
				return this._ID_UserRecebe;
			}
			set
			{
				if ((this._ID_UserRecebe != value))
				{
					if (this._Utilizador1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UserRecebeChanging(value);
					this.SendPropertyChanging();
					this._ID_UserRecebe = value;
					this.SendPropertyChanged("ID_UserRecebe");
					this.OnID_UserRecebeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Emprestimo", DbType="DateTime NOT NULL")]
		public System.DateTime Data_Emprestimo
		{
			get
			{
				return this._Data_Emprestimo;
			}
			set
			{
				if ((this._Data_Emprestimo != value))
				{
					this.OnData_EmprestimoChanging(value);
					this.SendPropertyChanging();
					this._Data_Emprestimo = value;
					this.SendPropertyChanged("Data_Emprestimo");
					this.OnData_EmprestimoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Devolucao", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_Devolucao
		{
			get
			{
				return this._Data_Devolucao;
			}
			set
			{
				if ((this._Data_Devolucao != value))
				{
					this.OnData_DevolucaoChanging(value);
					this.SendPropertyChanging();
					this._Data_Devolucao = value;
					this.SendPropertyChanged("Data_Devolucao");
					this.OnData_DevolucaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedBackComment_UserEmpresta", DbType="VarChar(300)")]
		public string FeedBackComment_UserEmpresta
		{
			get
			{
				return this._FeedBackComment_UserEmpresta;
			}
			set
			{
				if ((this._FeedBackComment_UserEmpresta != value))
				{
					this.OnFeedBackComment_UserEmprestaChanging(value);
					this.SendPropertyChanging();
					this._FeedBackComment_UserEmpresta = value;
					this.SendPropertyChanged("FeedBackComment_UserEmpresta");
					this.OnFeedBackComment_UserEmprestaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedBackComment_UserRecebe", DbType="VarChar(300)")]
		public string FeedBackComment_UserRecebe
		{
			get
			{
				return this._FeedBackComment_UserRecebe;
			}
			set
			{
				if ((this._FeedBackComment_UserRecebe != value))
				{
					this.OnFeedBackComment_UserRecebeChanging(value);
					this.SendPropertyChanging();
					this._FeedBackComment_UserRecebe = value;
					this.SendPropertyChanged("FeedBackComment_UserRecebe");
					this.OnFeedBackComment_UserRecebeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueFeedBack_userEmpresta", DbType="Float")]
		public System.Nullable<double> ValueFeedBack_userEmpresta
		{
			get
			{
				return this._ValueFeedBack_userEmpresta;
			}
			set
			{
				if ((this._ValueFeedBack_userEmpresta != value))
				{
					this.OnValueFeedBack_userEmprestaChanging(value);
					this.SendPropertyChanging();
					this._ValueFeedBack_userEmpresta = value;
					this.SendPropertyChanged("ValueFeedBack_userEmpresta");
					this.OnValueFeedBack_userEmprestaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueFeedBack_userRecebe", DbType="Float")]
		public System.Nullable<double> ValueFeedBack_userRecebe
		{
			get
			{
				return this._ValueFeedBack_userRecebe;
			}
			set
			{
				if ((this._ValueFeedBack_userRecebe != value))
				{
					this.OnValueFeedBack_userRecebeChanging(value);
					this.SendPropertyChanging();
					this._ValueFeedBack_userRecebe = value;
					this.SendPropertyChanged("ValueFeedBack_userRecebe");
					this.OnValueFeedBack_userRecebeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Empresta", Storage="_Utilizador", ThisKey="ID_UserEmpresta", OtherKey="ID_Utilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Emprestas.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Emprestas.Add(this);
						this._ID_UserEmpresta = value.ID_Utilizador;
					}
					else
					{
						this._ID_UserEmpresta = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Empresta1", Storage="_Utilizador1", ThisKey="ID_UserRecebe", OtherKey="ID_Utilizador", IsForeignKey=true)]
		public Utilizador Utilizador1
		{
			get
			{
				return this._Utilizador1.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador1.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador1.Entity = null;
						previousValue.Emprestas1.Remove(this);
					}
					this._Utilizador1.Entity = value;
					if ((value != null))
					{
						value.Emprestas1.Add(this);
						this._ID_UserRecebe = value.ID_Utilizador;
					}
					else
					{
						this._ID_UserRecebe = default(int);
					}
					this.SendPropertyChanged("Utilizador1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Empresta", Storage="_Livro", ThisKey="ID_Livro", OtherKey="ID_Livro", IsForeignKey=true)]
		public Livro Livro
		{
			get
			{
				return this._Livro.Entity;
			}
			set
			{
				Livro previousValue = this._Livro.Entity;
				if (((previousValue != value) 
							|| (this._Livro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livro.Entity = null;
						previousValue.Emprestas.Remove(this);
					}
					this._Livro.Entity = value;
					if ((value != null))
					{
						value.Emprestas.Add(this);
						this._ID_Livro = value.ID_Livro;
					}
					else
					{
						this._ID_Livro = default(int);
					}
					this.SendPropertyChanged("Livro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Escreve")]
	public partial class Escreve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Autor;
		
		private int _ID_Livro;
		
		private EntityRef<Autor> _Autor;
		
		private EntityRef<Livro> _Livro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AutorChanging(int value);
    partial void OnID_AutorChanged();
    partial void OnID_LivroChanging(int value);
    partial void OnID_LivroChanged();
    #endregion
		
		public Escreve()
		{
			this._Autor = default(EntityRef<Autor>);
			this._Livro = default(EntityRef<Livro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Autor", DbType="Int NOT NULL")]
		public int ID_Autor
		{
			get
			{
				return this._ID_Autor;
			}
			set
			{
				if ((this._ID_Autor != value))
				{
					if (this._Autor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AutorChanging(value);
					this.SendPropertyChanging();
					this._ID_Autor = value;
					this.SendPropertyChanged("ID_Autor");
					this.OnID_AutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Livro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Livro
		{
			get
			{
				return this._ID_Livro;
			}
			set
			{
				if ((this._ID_Livro != value))
				{
					if (this._Livro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LivroChanging(value);
					this.SendPropertyChanging();
					this._ID_Livro = value;
					this.SendPropertyChanged("ID_Livro");
					this.OnID_LivroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_Escreve", Storage="_Autor", ThisKey="ID_Autor", OtherKey="ID_Autor", IsForeignKey=true)]
		public Autor Autor
		{
			get
			{
				return this._Autor.Entity;
			}
			set
			{
				Autor previousValue = this._Autor.Entity;
				if (((previousValue != value) 
							|| (this._Autor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Autor.Entity = null;
						previousValue.Escreves.Remove(this);
					}
					this._Autor.Entity = value;
					if ((value != null))
					{
						value.Escreves.Add(this);
						this._ID_Autor = value.ID_Autor;
					}
					else
					{
						this._ID_Autor = default(int);
					}
					this.SendPropertyChanged("Autor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Escreve", Storage="_Livro", ThisKey="ID_Livro", OtherKey="ID_Livro", IsForeignKey=true)]
		public Livro Livro
		{
			get
			{
				return this._Livro.Entity;
			}
			set
			{
				Livro previousValue = this._Livro.Entity;
				if (((previousValue != value) 
							|| (this._Livro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livro.Entity = null;
						previousValue.Escreve = null;
					}
					this._Livro.Entity = value;
					if ((value != null))
					{
						value.Escreve = this;
						this._ID_Livro = value.ID_Livro;
					}
					else
					{
						this._ID_Livro = default(int);
					}
					this.SendPropertyChanged("Livro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Leu")]
	public partial class Leu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Livro;
		
		private int _ID_Utilizador;
		
		private System.Nullable<System.DateTime> _Data_Comentario;
		
		private string _Comentario;
		
		private bool _Estado;
		
		private EntityRef<Utilizador> _Utilizador;
		
		private EntityRef<Livro> _Livro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LivroChanging(int value);
    partial void OnID_LivroChanged();
    partial void OnID_UtilizadorChanging(int value);
    partial void OnID_UtilizadorChanged();
    partial void OnData_ComentarioChanging(System.Nullable<System.DateTime> value);
    partial void OnData_ComentarioChanged();
    partial void OnComentarioChanging(string value);
    partial void OnComentarioChanged();
    partial void OnEstadoChanging(bool value);
    partial void OnEstadoChanged();
    #endregion
		
		public Leu()
		{
			this._Utilizador = default(EntityRef<Utilizador>);
			this._Livro = default(EntityRef<Livro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Livro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Livro
		{
			get
			{
				return this._ID_Livro;
			}
			set
			{
				if ((this._ID_Livro != value))
				{
					if (this._Livro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LivroChanging(value);
					this.SendPropertyChanging();
					this._ID_Livro = value;
					this.SendPropertyChanged("ID_Livro");
					this.OnID_LivroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Utilizador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Utilizador
		{
			get
			{
				return this._ID_Utilizador;
			}
			set
			{
				if ((this._ID_Utilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UtilizadorChanging(value);
					this.SendPropertyChanging();
					this._ID_Utilizador = value;
					this.SendPropertyChanged("ID_Utilizador");
					this.OnID_UtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Comentario", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_Comentario
		{
			get
			{
				return this._Data_Comentario;
			}
			set
			{
				if ((this._Data_Comentario != value))
				{
					this.OnData_ComentarioChanging(value);
					this.SendPropertyChanging();
					this._Data_Comentario = value;
					this.SendPropertyChanged("Data_Comentario");
					this.OnData_ComentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentario", DbType="VarChar(500)")]
		public string Comentario
		{
			get
			{
				return this._Comentario;
			}
			set
			{
				if ((this._Comentario != value))
				{
					this.OnComentarioChanging(value);
					this.SendPropertyChanging();
					this._Comentario = value;
					this.SendPropertyChanged("Comentario");
					this.OnComentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit NOT NULL")]
		public bool Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Leu", Storage="_Utilizador", ThisKey="ID_Utilizador", OtherKey="ID_Utilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Leus.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Leus.Add(this);
						this._ID_Utilizador = value.ID_Utilizador;
					}
					else
					{
						this._ID_Utilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Leu", Storage="_Livro", ThisKey="ID_Livro", OtherKey="ID_Livro", IsForeignKey=true)]
		public Livro Livro
		{
			get
			{
				return this._Livro.Entity;
			}
			set
			{
				Livro previousValue = this._Livro.Entity;
				if (((previousValue != value) 
							|| (this._Livro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livro.Entity = null;
						previousValue.Leus.Remove(this);
					}
					this._Livro.Entity = value;
					if ((value != null))
					{
						value.Leus.Add(this);
						this._ID_Livro = value.ID_Livro;
					}
					else
					{
						this._ID_Livro = default(int);
					}
					this.SendPropertyChanged("Livro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Livro")]
	public partial class Livro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Livro;
		
		private string _ISBN;
		
		private string _Titulo;
		
		private string _Editora;
		
		private string _Sinopse;
		
		private System.DateTime _EdicaoData;
		
		private int _EdicaoNumero;
		
		private bool _Estado;
		
		private EntityRef<Adiciona> _Adiciona;
		
		private EntitySet<Disponivel> _Disponivels;
		
		private EntitySet<Empresta> _Emprestas;
		
		private EntityRef<Escreve> _Escreve;
		
		private EntitySet<Leu> _Leus;
		
		private EntitySet<Pede> _Pedes;
		
		private EntityRef<Pertence> _Pertence;
		
		private EntitySet<Possui> _Possuis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LivroChanging(int value);
    partial void OnID_LivroChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnEditoraChanging(string value);
    partial void OnEditoraChanged();
    partial void OnSinopseChanging(string value);
    partial void OnSinopseChanged();
    partial void OnEdicaoDataChanging(System.DateTime value);
    partial void OnEdicaoDataChanged();
    partial void OnEdicaoNumeroChanging(int value);
    partial void OnEdicaoNumeroChanged();
    partial void OnEstadoChanging(bool value);
    partial void OnEstadoChanged();
    #endregion
		
		public Livro()
		{
			this._Adiciona = default(EntityRef<Adiciona>);
			this._Disponivels = new EntitySet<Disponivel>(new Action<Disponivel>(this.attach_Disponivels), new Action<Disponivel>(this.detach_Disponivels));
			this._Emprestas = new EntitySet<Empresta>(new Action<Empresta>(this.attach_Emprestas), new Action<Empresta>(this.detach_Emprestas));
			this._Escreve = default(EntityRef<Escreve>);
			this._Leus = new EntitySet<Leu>(new Action<Leu>(this.attach_Leus), new Action<Leu>(this.detach_Leus));
			this._Pedes = new EntitySet<Pede>(new Action<Pede>(this.attach_Pedes), new Action<Pede>(this.detach_Pedes));
			this._Pertence = default(EntityRef<Pertence>);
			this._Possuis = new EntitySet<Possui>(new Action<Possui>(this.attach_Possuis), new Action<Possui>(this.detach_Possuis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Livro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Livro
		{
			get
			{
				return this._ID_Livro;
			}
			set
			{
				if ((this._ID_Livro != value))
				{
					this.OnID_LivroChanging(value);
					this.SendPropertyChanging();
					this._ID_Livro = value;
					this.SendPropertyChanged("ID_Livro");
					this.OnID_LivroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Editora
		{
			get
			{
				return this._Editora;
			}
			set
			{
				if ((this._Editora != value))
				{
					this.OnEditoraChanging(value);
					this.SendPropertyChanging();
					this._Editora = value;
					this.SendPropertyChanged("Editora");
					this.OnEditoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sinopse", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Sinopse
		{
			get
			{
				return this._Sinopse;
			}
			set
			{
				if ((this._Sinopse != value))
				{
					this.OnSinopseChanging(value);
					this.SendPropertyChanging();
					this._Sinopse = value;
					this.SendPropertyChanged("Sinopse");
					this.OnSinopseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EdicaoData", DbType="Date NOT NULL")]
		public System.DateTime EdicaoData
		{
			get
			{
				return this._EdicaoData;
			}
			set
			{
				if ((this._EdicaoData != value))
				{
					this.OnEdicaoDataChanging(value);
					this.SendPropertyChanging();
					this._EdicaoData = value;
					this.SendPropertyChanged("EdicaoData");
					this.OnEdicaoDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EdicaoNumero", DbType="Int NOT NULL")]
		public int EdicaoNumero
		{
			get
			{
				return this._EdicaoNumero;
			}
			set
			{
				if ((this._EdicaoNumero != value))
				{
					this.OnEdicaoNumeroChanging(value);
					this.SendPropertyChanging();
					this._EdicaoNumero = value;
					this.SendPropertyChanged("EdicaoNumero");
					this.OnEdicaoNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit NOT NULL")]
		public bool Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Adiciona", Storage="_Adiciona", ThisKey="ID_Livro", OtherKey="ID_Livro", IsUnique=true, IsForeignKey=false)]
		public Adiciona Adiciona
		{
			get
			{
				return this._Adiciona.Entity;
			}
			set
			{
				Adiciona previousValue = this._Adiciona.Entity;
				if (((previousValue != value) 
							|| (this._Adiciona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adiciona.Entity = null;
						previousValue.Livro = null;
					}
					this._Adiciona.Entity = value;
					if ((value != null))
					{
						value.Livro = this;
					}
					this.SendPropertyChanged("Adiciona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Disponivel", Storage="_Disponivels", ThisKey="ID_Livro", OtherKey="ID_Livro")]
		public EntitySet<Disponivel> Disponivels
		{
			get
			{
				return this._Disponivels;
			}
			set
			{
				this._Disponivels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Empresta", Storage="_Emprestas", ThisKey="ID_Livro", OtherKey="ID_Livro")]
		public EntitySet<Empresta> Emprestas
		{
			get
			{
				return this._Emprestas;
			}
			set
			{
				this._Emprestas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Escreve", Storage="_Escreve", ThisKey="ID_Livro", OtherKey="ID_Livro", IsUnique=true, IsForeignKey=false)]
		public Escreve Escreve
		{
			get
			{
				return this._Escreve.Entity;
			}
			set
			{
				Escreve previousValue = this._Escreve.Entity;
				if (((previousValue != value) 
							|| (this._Escreve.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Escreve.Entity = null;
						previousValue.Livro = null;
					}
					this._Escreve.Entity = value;
					if ((value != null))
					{
						value.Livro = this;
					}
					this.SendPropertyChanged("Escreve");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Leu", Storage="_Leus", ThisKey="ID_Livro", OtherKey="ID_Livro")]
		public EntitySet<Leu> Leus
		{
			get
			{
				return this._Leus;
			}
			set
			{
				this._Leus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Pede", Storage="_Pedes", ThisKey="ID_Livro", OtherKey="ID_Livro")]
		public EntitySet<Pede> Pedes
		{
			get
			{
				return this._Pedes;
			}
			set
			{
				this._Pedes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Pertence", Storage="_Pertence", ThisKey="ID_Livro", OtherKey="ID_Livro", IsUnique=true, IsForeignKey=false)]
		public Pertence Pertence
		{
			get
			{
				return this._Pertence.Entity;
			}
			set
			{
				Pertence previousValue = this._Pertence.Entity;
				if (((previousValue != value) 
							|| (this._Pertence.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pertence.Entity = null;
						previousValue.Livro = null;
					}
					this._Pertence.Entity = value;
					if ((value != null))
					{
						value.Livro = this;
					}
					this.SendPropertyChanged("Pertence");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Possui", Storage="_Possuis", ThisKey="ID_Livro", OtherKey="ID_Livro")]
		public EntitySet<Possui> Possuis
		{
			get
			{
				return this._Possuis;
			}
			set
			{
				this._Possuis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Disponivels(Disponivel entity)
		{
			this.SendPropertyChanging();
			entity.Livro = this;
		}
		
		private void detach_Disponivels(Disponivel entity)
		{
			this.SendPropertyChanging();
			entity.Livro = null;
		}
		
		private void attach_Emprestas(Empresta entity)
		{
			this.SendPropertyChanging();
			entity.Livro = this;
		}
		
		private void detach_Emprestas(Empresta entity)
		{
			this.SendPropertyChanging();
			entity.Livro = null;
		}
		
		private void attach_Leus(Leu entity)
		{
			this.SendPropertyChanging();
			entity.Livro = this;
		}
		
		private void detach_Leus(Leu entity)
		{
			this.SendPropertyChanging();
			entity.Livro = null;
		}
		
		private void attach_Pedes(Pede entity)
		{
			this.SendPropertyChanging();
			entity.Livro = this;
		}
		
		private void detach_Pedes(Pede entity)
		{
			this.SendPropertyChanging();
			entity.Livro = null;
		}
		
		private void attach_Possuis(Possui entity)
		{
			this.SendPropertyChanging();
			entity.Livro = this;
		}
		
		private void detach_Possuis(Possui entity)
		{
			this.SendPropertyChanging();
			entity.Livro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loja")]
	public partial class Loja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Loja;
		
		private string _Nome;
		
		private EntitySet<Disponivel> _Disponivels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LojaChanging(int value);
    partial void OnID_LojaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public Loja()
		{
			this._Disponivels = new EntitySet<Disponivel>(new Action<Disponivel>(this.attach_Disponivels), new Action<Disponivel>(this.detach_Disponivels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Loja", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Loja
		{
			get
			{
				return this._ID_Loja;
			}
			set
			{
				if ((this._ID_Loja != value))
				{
					this.OnID_LojaChanging(value);
					this.SendPropertyChanging();
					this._ID_Loja = value;
					this.SendPropertyChanged("ID_Loja");
					this.OnID_LojaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loja_Disponivel", Storage="_Disponivels", ThisKey="ID_Loja", OtherKey="ID_Loja")]
		public EntitySet<Disponivel> Disponivels
		{
			get
			{
				return this._Disponivels;
			}
			set
			{
				this._Disponivels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Disponivels(Disponivel entity)
		{
			this.SendPropertyChanging();
			entity.Loja = this;
		}
		
		private void detach_Disponivels(Disponivel entity)
		{
			this.SendPropertyChanging();
			entity.Loja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pede")]
	public partial class Pede : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Livro;
		
		private int _ID_Utilizador;
		
		private System.DateTime _Data_Criacao;
		
		private bool _Estado_Pedido;
		
		private EntityRef<Livro> _Livro;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LivroChanging(int value);
    partial void OnID_LivroChanged();
    partial void OnID_UtilizadorChanging(int value);
    partial void OnID_UtilizadorChanged();
    partial void OnData_CriacaoChanging(System.DateTime value);
    partial void OnData_CriacaoChanged();
    partial void OnEstado_PedidoChanging(bool value);
    partial void OnEstado_PedidoChanged();
    #endregion
		
		public Pede()
		{
			this._Livro = default(EntityRef<Livro>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Livro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Livro
		{
			get
			{
				return this._ID_Livro;
			}
			set
			{
				if ((this._ID_Livro != value))
				{
					if (this._Livro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LivroChanging(value);
					this.SendPropertyChanging();
					this._ID_Livro = value;
					this.SendPropertyChanged("ID_Livro");
					this.OnID_LivroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Utilizador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Utilizador
		{
			get
			{
				return this._ID_Utilizador;
			}
			set
			{
				if ((this._ID_Utilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UtilizadorChanging(value);
					this.SendPropertyChanging();
					this._ID_Utilizador = value;
					this.SendPropertyChanged("ID_Utilizador");
					this.OnID_UtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Criacao", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Criacao
		{
			get
			{
				return this._Data_Criacao;
			}
			set
			{
				if ((this._Data_Criacao != value))
				{
					this.OnData_CriacaoChanging(value);
					this.SendPropertyChanging();
					this._Data_Criacao = value;
					this.SendPropertyChanged("Data_Criacao");
					this.OnData_CriacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado_Pedido", DbType="Bit NOT NULL")]
		public bool Estado_Pedido
		{
			get
			{
				return this._Estado_Pedido;
			}
			set
			{
				if ((this._Estado_Pedido != value))
				{
					this.OnEstado_PedidoChanging(value);
					this.SendPropertyChanging();
					this._Estado_Pedido = value;
					this.SendPropertyChanged("Estado_Pedido");
					this.OnEstado_PedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Pede", Storage="_Livro", ThisKey="ID_Livro", OtherKey="ID_Livro", IsForeignKey=true)]
		public Livro Livro
		{
			get
			{
				return this._Livro.Entity;
			}
			set
			{
				Livro previousValue = this._Livro.Entity;
				if (((previousValue != value) 
							|| (this._Livro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livro.Entity = null;
						previousValue.Pedes.Remove(this);
					}
					this._Livro.Entity = value;
					if ((value != null))
					{
						value.Pedes.Add(this);
						this._ID_Livro = value.ID_Livro;
					}
					else
					{
						this._ID_Livro = default(int);
					}
					this.SendPropertyChanged("Livro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Pede", Storage="_Utilizador", ThisKey="ID_Utilizador", OtherKey="ID_Utilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Pedes.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Pedes.Add(this);
						this._ID_Utilizador = value.ID_Utilizador;
					}
					else
					{
						this._ID_Utilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pertence")]
	public partial class Pertence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Livro;
		
		private int _ID_Categoria;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<Livro> _Livro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LivroChanging(int value);
    partial void OnID_LivroChanged();
    partial void OnID_CategoriaChanging(int value);
    partial void OnID_CategoriaChanged();
    #endregion
		
		public Pertence()
		{
			this._Categoria = default(EntityRef<Categoria>);
			this._Livro = default(EntityRef<Livro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Livro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Livro
		{
			get
			{
				return this._ID_Livro;
			}
			set
			{
				if ((this._ID_Livro != value))
				{
					if (this._Livro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LivroChanging(value);
					this.SendPropertyChanging();
					this._ID_Livro = value;
					this.SendPropertyChanged("ID_Livro");
					this.OnID_LivroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Categoria", DbType="Int NOT NULL")]
		public int ID_Categoria
		{
			get
			{
				return this._ID_Categoria;
			}
			set
			{
				if ((this._ID_Categoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._ID_Categoria = value;
					this.SendPropertyChanged("ID_Categoria");
					this.OnID_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Pertence", Storage="_Categoria", ThisKey="ID_Categoria", OtherKey="ID_Categoria", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Pertences.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Pertences.Add(this);
						this._ID_Categoria = value.ID_Categoria;
					}
					else
					{
						this._ID_Categoria = default(int);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Pertence", Storage="_Livro", ThisKey="ID_Livro", OtherKey="ID_Livro", IsForeignKey=true)]
		public Livro Livro
		{
			get
			{
				return this._Livro.Entity;
			}
			set
			{
				Livro previousValue = this._Livro.Entity;
				if (((previousValue != value) 
							|| (this._Livro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livro.Entity = null;
						previousValue.Pertence = null;
					}
					this._Livro.Entity = value;
					if ((value != null))
					{
						value.Pertence = this;
						this._ID_Livro = value.ID_Livro;
					}
					else
					{
						this._ID_Livro = default(int);
					}
					this.SendPropertyChanged("Livro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Possui")]
	public partial class Possui : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Livro;
		
		private int _ID_Utilizador;
		
		private System.DateTime _Data;
		
		private bool _Visibilidade;
		
		private bool _Lido;
		
		private bool _Estado;
		
		private EntityRef<Livro> _Livro;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LivroChanging(int value);
    partial void OnID_LivroChanged();
    partial void OnID_UtilizadorChanging(int value);
    partial void OnID_UtilizadorChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnVisibilidadeChanging(bool value);
    partial void OnVisibilidadeChanged();
    partial void OnLidoChanging(bool value);
    partial void OnLidoChanged();
    partial void OnEstadoChanging(bool value);
    partial void OnEstadoChanged();
    #endregion
		
		public Possui()
		{
			this._Livro = default(EntityRef<Livro>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Livro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Livro
		{
			get
			{
				return this._ID_Livro;
			}
			set
			{
				if ((this._ID_Livro != value))
				{
					if (this._Livro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LivroChanging(value);
					this.SendPropertyChanging();
					this._ID_Livro = value;
					this.SendPropertyChanged("ID_Livro");
					this.OnID_LivroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Utilizador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Utilizador
		{
			get
			{
				return this._ID_Utilizador;
			}
			set
			{
				if ((this._ID_Utilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UtilizadorChanging(value);
					this.SendPropertyChanging();
					this._ID_Utilizador = value;
					this.SendPropertyChanged("ID_Utilizador");
					this.OnID_UtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibilidade", DbType="Bit NOT NULL")]
		public bool Visibilidade
		{
			get
			{
				return this._Visibilidade;
			}
			set
			{
				if ((this._Visibilidade != value))
				{
					this.OnVisibilidadeChanging(value);
					this.SendPropertyChanging();
					this._Visibilidade = value;
					this.SendPropertyChanged("Visibilidade");
					this.OnVisibilidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lido", DbType="Bit NOT NULL")]
		public bool Lido
		{
			get
			{
				return this._Lido;
			}
			set
			{
				if ((this._Lido != value))
				{
					this.OnLidoChanging(value);
					this.SendPropertyChanging();
					this._Lido = value;
					this.SendPropertyChanged("Lido");
					this.OnLidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Bit NOT NULL")]
		public bool Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livro_Possui", Storage="_Livro", ThisKey="ID_Livro", OtherKey="ID_Livro", IsForeignKey=true)]
		public Livro Livro
		{
			get
			{
				return this._Livro.Entity;
			}
			set
			{
				Livro previousValue = this._Livro.Entity;
				if (((previousValue != value) 
							|| (this._Livro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livro.Entity = null;
						previousValue.Possuis.Remove(this);
					}
					this._Livro.Entity = value;
					if ((value != null))
					{
						value.Possuis.Add(this);
						this._ID_Livro = value.ID_Livro;
					}
					else
					{
						this._ID_Livro = default(int);
					}
					this.SendPropertyChanged("Livro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Possui", Storage="_Utilizador", ThisKey="ID_Utilizador", OtherKey="ID_Utilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Possuis.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Possuis.Add(this);
						this._ID_Utilizador = value.ID_Utilizador;
					}
					else
					{
						this._ID_Utilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
